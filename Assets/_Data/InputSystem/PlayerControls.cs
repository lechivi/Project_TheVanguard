//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_Data/InputSystem/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerMovement"",
            ""id"": ""c038e02b-797e-4e0d-9818-f15323ce0e61"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""db461322-fc62-4490-b4d2-10004c5f7e3e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""cfee562f-5758-4dca-a981-861ca99b24e3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""8d0120ec-9070-4367-be84-e27a0105a2b9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ec9ad210-8b0b-4abc-ad7b-0ffed4bf9ef9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""07018187-909d-4ace-90e8-191b9f850f81"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bed578fd-e02d-4851-995a-5f5f7c823a6b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cd5fee06-f380-4383-b1de-81dc95dd9a9b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""55269dfe-38e7-48fe-a9cb-adf1b15f15b9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""397757ab-3840-4f3a-b247-f54377190074"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4ea04d0d-cbca-448c-87b9-6c53795ed567"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e4e6570b-35ae-42d0-b100-4b8e8ba2115e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0d6842f9-beed-4b3a-aa5b-135b15b553b9"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""36750fba-319f-4c67-8f9c-faf4592e3596"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.05,y=0.05)"",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerAction"",
            ""id"": ""bdace51e-9236-4931-9e45-0c3a0e823a69"",
            ""actions"": [
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""8501eac9-029d-4b41-9195-559c3919d802"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""2ce82c41-04bb-4a4d-8fef-dd1daf778c2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crounch"",
                    ""type"": ""Button"",
                    ""id"": ""d67fb12c-5a26-4996-9dc1-da939e2954cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""7c207f7f-b59e-44c9-9d3c-00dfb89ac586"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""941d12e1-2997-4449-830a-4292eb1755b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeCamera"",
                    ""type"": ""Button"",
                    ""id"": ""618b7759-659d-4970-9c2c-c2d06d779d63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""8b6bd752-a750-44b6-ac6e-9e0cc05437b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""d47f51bc-70c2-428d-a5e7-c86b40965a50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialSkill"",
                    ""type"": ""Button"",
                    ""id"": ""c3c25121-eefb-43c6-ab7e-dcad4dfd2915"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BattleSkill"",
                    ""type"": ""Button"",
                    ""id"": ""a7470da3-fa34-4686-b1b1-dd012ec25d94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""34eef941-7632-40c4-88b3-3e57ad8eb308"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b112598-d306-47e6-9a62-8f80bcc4030d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65a6e78f-4c54-47b4-aed7-1b2a0c05dab0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcb19c5a-2f09-408a-9cca-4aaeb0abd309"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e56eb62-d37b-47f0-99cb-292491a71576"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a984035a-a8bd-41d9-a1b0-5343d320890e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87f39b62-c1bf-4ef0-afd4-fbc4bbc9b25e"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11e8fba1-4fc2-410f-a54a-1a423c777e1f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b3a5104-099a-421a-bb6c-a4705c326996"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SpecialSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4eb3b820-1962-4b89-b401-6c225ce58efd"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SpecialSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8e1cd16-4127-474b-bd93-1896cec57c84"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3afef845-676e-43d8-9295-bfe555649ab5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1acd863d-6d4d-40a2-acdb-9c265153580f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba11291b-71fd-429c-adab-28002d198597"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19de321c-7c5a-40af-88d7-3c8b7299445b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""BattleSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcb446c4-11f8-4815-8726-acacc0540397"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BattleSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf1c63e7-77dc-4278-9a52-cc3be598fb73"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Crounch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a2dd2f3-43dd-4fd1-9283-01420d5e6c47"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Crounch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d97fc722-0183-4a4b-9734-17ea250e7603"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ChangeCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc3f654a-b892-402b-82c5-7bd5de4836f3"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""577025b4-66d7-4aff-b277-872ee5e0f40f"",
            ""actions"": [
                {
                    ""name"": ""MenuOpenClose"",
                    ""type"": ""Button"",
                    ""id"": ""6fef6784-a8f4-4ba7-be98-52fda238ee5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextChoice"",
                    ""type"": ""Button"",
                    ""id"": ""a0154b30-753a-400e-9d1a-f9e3cc765010"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevChoice"",
                    ""type"": ""Button"",
                    ""id"": ""cdd0c28d-d013-43d5-a5cc-56a1e51fd3ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""95c61146-10f9-43f2-8cd6-c3dec1ce31f2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MenuOpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13f4d289-afa8-4536-af7c-0414c8937382"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MenuOpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfebe8ab-46ed-4207-b270-5eead4f7c4c1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NextChoice"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""973bf5ed-0a48-434c-8844-99efc155a7e2"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NextChoice"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80f7fa08-657d-4aa7-ab68-d5e1d6b968e7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PrevChoice"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a152ef4c-8bab-482f-b9b8-85503264e7ca"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PrevChoice"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ChrSelScene"",
            ""id"": ""e43e892e-e733-4dac-9308-b91ff79ace3c"",
            ""actions"": [
                {
                    ""name"": ""Prev"",
                    ""type"": ""Button"",
                    ""id"": ""2ec17447-ba1e-42d0-8415-030b1d1ac260"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""7c1c55b2-9420-47bf-8472-c51f84563bd2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""995e1173-b74f-408f-a7dd-4f7508fc3d6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""ec835aa4-e1b7-4ac6-83e4-3e02ca10673e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""898009f4-7dd5-4c47-ae87-3e185b1aa0a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0be22672-3ecb-458c-910a-c47ebf4ed5d0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e21e6bca-a50d-4402-9fcb-e6182b9771e7"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afb9caf7-791c-45db-9e4b-91921085da7e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Prev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58cc53bb-ef28-4e8f-b4a4-aaeafc7bcd11"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Prev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45ae1464-f499-4951-a87e-daafaba5e2c5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d6b36d5-3755-400e-8784-9ae18e0e99bd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""520a8463-8d08-4240-a44f-2f5d5dd978a1"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36d2e37d-430c-4bbf-aa76-791c0b7a8d8d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0d0ca12-5cb1-4780-8d17-642a3ffdb3cf"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1137c09a-838a-4646-937d-a805f201c90f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MainMenuScene"",
            ""id"": ""3a68d967-b866-41d6-bc88-6e70f71425e7"",
            ""actions"": [
                {
                    ""name"": ""Prev"",
                    ""type"": ""Button"",
                    ""id"": ""7d95227f-0df4-4121-b690-3309ca42a838"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""421de6e0-a480-4acf-be98-3e5c4df053a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""a6de18ae-c48b-4ecd-8b04-f28c966a4b5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""8bd217b3-f92e-461d-a734-3f9a4a4b4792"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""cab67b64-897a-4828-852e-a85ca11d9e46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""50742a45-bd03-4885-a0f9-9b710b67143c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""933fb41f-fefa-4df8-a98d-ada692f2f4ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""a3792c5a-d6f8-4068-bf67-9ba1ed93d747"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""76d46e73-c087-4b74-b8d0-24170546d7d4"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Prev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94599169-06eb-4fdd-820e-9bb28083b9b2"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Prev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4ca716f-5f50-4a20-b455-700fe9bca17a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""901e3fa6-5ae7-4cbe-8c2a-4f4525e06ef4"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb393f86-c9b5-4588-b79b-5d51a0132660"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eae83c3b-4d81-4344-a4ea-61626c59045d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e3848e5-f64e-4ac1-8402-bc7bea2c31fa"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1418bdcf-a7fb-4ac3-b98a-d83b2c9e98cf"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a9bfd0a-079b-466f-a993-030fe3aa3b80"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c81f3ecf-55ff-4d0e-8bd1-baa27865029a"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adb74f4b-0809-44ee-af9d-bdfe4dafb4d5"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34231b1e-fd81-4021-937d-f81c36777cb8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""148ed216-536c-4363-9d61-c41daf808463"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a4ed8c3-3808-432c-acd4-013901654246"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf1c4788-52a8-4884-a6c2-cee02c4ed12f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37c7b7ae-f866-4ed6-b376-f3b102c52c36"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f0b75a4-172b-4bdc-99d7-efefa3103cf9"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80fb4284-28ca-4c82-9c12-a51461360327"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6b2cdd7-e083-4471-aa0c-39b88ebf0eb8"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c990a4c4-fe59-43ba-9d2a-a10e404ad4b1"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerMovement
        m_PlayerMovement = asset.FindActionMap("PlayerMovement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        m_PlayerMovement_Look = m_PlayerMovement.FindAction("Look", throwIfNotFound: true);
        // PlayerAction
        m_PlayerAction = asset.FindActionMap("PlayerAction", throwIfNotFound: true);
        m_PlayerAction_Sprint = m_PlayerAction.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerAction_Jump = m_PlayerAction.FindAction("Jump", throwIfNotFound: true);
        m_PlayerAction_Crounch = m_PlayerAction.FindAction("Crounch", throwIfNotFound: true);
        m_PlayerAction_Reload = m_PlayerAction.FindAction("Reload", throwIfNotFound: true);
        m_PlayerAction_Interact = m_PlayerAction.FindAction("Interact", throwIfNotFound: true);
        m_PlayerAction_ChangeCamera = m_PlayerAction.FindAction("ChangeCamera", throwIfNotFound: true);
        m_PlayerAction_Attack = m_PlayerAction.FindAction("Attack", throwIfNotFound: true);
        m_PlayerAction_Aim = m_PlayerAction.FindAction("Aim", throwIfNotFound: true);
        m_PlayerAction_SpecialSkill = m_PlayerAction.FindAction("SpecialSkill", throwIfNotFound: true);
        m_PlayerAction_BattleSkill = m_PlayerAction.FindAction("BattleSkill", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_MenuOpenClose = m_UI.FindAction("MenuOpenClose", throwIfNotFound: true);
        m_UI_NextChoice = m_UI.FindAction("NextChoice", throwIfNotFound: true);
        m_UI_PrevChoice = m_UI.FindAction("PrevChoice", throwIfNotFound: true);
        // ChrSelScene
        m_ChrSelScene = asset.FindActionMap("ChrSelScene", throwIfNotFound: true);
        m_ChrSelScene_Prev = m_ChrSelScene.FindAction("Prev", throwIfNotFound: true);
        m_ChrSelScene_Next = m_ChrSelScene.FindAction("Next", throwIfNotFound: true);
        m_ChrSelScene_Back = m_ChrSelScene.FindAction("Back", throwIfNotFound: true);
        m_ChrSelScene_Select = m_ChrSelScene.FindAction("Select", throwIfNotFound: true);
        m_ChrSelScene_Start = m_ChrSelScene.FindAction("Start", throwIfNotFound: true);
        // MainMenuScene
        m_MainMenuScene = asset.FindActionMap("MainMenuScene", throwIfNotFound: true);
        m_MainMenuScene_Prev = m_MainMenuScene.FindAction("Prev", throwIfNotFound: true);
        m_MainMenuScene_Next = m_MainMenuScene.FindAction("Next", throwIfNotFound: true);
        m_MainMenuScene_Up = m_MainMenuScene.FindAction("Up", throwIfNotFound: true);
        m_MainMenuScene_Down = m_MainMenuScene.FindAction("Down", throwIfNotFound: true);
        m_MainMenuScene_Left = m_MainMenuScene.FindAction("Left", throwIfNotFound: true);
        m_MainMenuScene_Right = m_MainMenuScene.FindAction("Right", throwIfNotFound: true);
        m_MainMenuScene_Back = m_MainMenuScene.FindAction("Back", throwIfNotFound: true);
        m_MainMenuScene_Select = m_MainMenuScene.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMovement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Movement;
    private readonly InputAction m_PlayerMovement_Look;
    public struct PlayerMovementActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputAction @Look => m_Wrapper.m_PlayerMovement_Look;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // PlayerAction
    private readonly InputActionMap m_PlayerAction;
    private IPlayerActionActions m_PlayerActionActionsCallbackInterface;
    private readonly InputAction m_PlayerAction_Sprint;
    private readonly InputAction m_PlayerAction_Jump;
    private readonly InputAction m_PlayerAction_Crounch;
    private readonly InputAction m_PlayerAction_Reload;
    private readonly InputAction m_PlayerAction_Interact;
    private readonly InputAction m_PlayerAction_ChangeCamera;
    private readonly InputAction m_PlayerAction_Attack;
    private readonly InputAction m_PlayerAction_Aim;
    private readonly InputAction m_PlayerAction_SpecialSkill;
    private readonly InputAction m_PlayerAction_BattleSkill;
    public struct PlayerActionActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Sprint => m_Wrapper.m_PlayerAction_Sprint;
        public InputAction @Jump => m_Wrapper.m_PlayerAction_Jump;
        public InputAction @Crounch => m_Wrapper.m_PlayerAction_Crounch;
        public InputAction @Reload => m_Wrapper.m_PlayerAction_Reload;
        public InputAction @Interact => m_Wrapper.m_PlayerAction_Interact;
        public InputAction @ChangeCamera => m_Wrapper.m_PlayerAction_ChangeCamera;
        public InputAction @Attack => m_Wrapper.m_PlayerAction_Attack;
        public InputAction @Aim => m_Wrapper.m_PlayerAction_Aim;
        public InputAction @SpecialSkill => m_Wrapper.m_PlayerAction_SpecialSkill;
        public InputAction @BattleSkill => m_Wrapper.m_PlayerAction_BattleSkill;
        public InputActionMap Get() { return m_Wrapper.m_PlayerAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActionActions instance)
        {
            if (m_Wrapper.m_PlayerActionActionsCallbackInterface != null)
            {
                @Sprint.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSprint;
                @Jump.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnJump;
                @Crounch.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnCrounch;
                @Crounch.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnCrounch;
                @Crounch.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnCrounch;
                @Reload.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnReload;
                @Interact.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnInteract;
                @ChangeCamera.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnChangeCamera;
                @ChangeCamera.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnChangeCamera;
                @ChangeCamera.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnChangeCamera;
                @Attack.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnAttack;
                @Aim.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnAim;
                @SpecialSkill.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSpecialSkill;
                @SpecialSkill.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSpecialSkill;
                @SpecialSkill.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnSpecialSkill;
                @BattleSkill.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnBattleSkill;
                @BattleSkill.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnBattleSkill;
                @BattleSkill.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnBattleSkill;
            }
            m_Wrapper.m_PlayerActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Crounch.started += instance.OnCrounch;
                @Crounch.performed += instance.OnCrounch;
                @Crounch.canceled += instance.OnCrounch;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @ChangeCamera.started += instance.OnChangeCamera;
                @ChangeCamera.performed += instance.OnChangeCamera;
                @ChangeCamera.canceled += instance.OnChangeCamera;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @SpecialSkill.started += instance.OnSpecialSkill;
                @SpecialSkill.performed += instance.OnSpecialSkill;
                @SpecialSkill.canceled += instance.OnSpecialSkill;
                @BattleSkill.started += instance.OnBattleSkill;
                @BattleSkill.performed += instance.OnBattleSkill;
                @BattleSkill.canceled += instance.OnBattleSkill;
            }
        }
    }
    public PlayerActionActions @PlayerAction => new PlayerActionActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_MenuOpenClose;
    private readonly InputAction m_UI_NextChoice;
    private readonly InputAction m_UI_PrevChoice;
    public struct UIActions
    {
        private @PlayerControls m_Wrapper;
        public UIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MenuOpenClose => m_Wrapper.m_UI_MenuOpenClose;
        public InputAction @NextChoice => m_Wrapper.m_UI_NextChoice;
        public InputAction @PrevChoice => m_Wrapper.m_UI_PrevChoice;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @MenuOpenClose.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMenuOpenClose;
                @MenuOpenClose.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMenuOpenClose;
                @MenuOpenClose.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMenuOpenClose;
                @NextChoice.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNextChoice;
                @NextChoice.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNextChoice;
                @NextChoice.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNextChoice;
                @PrevChoice.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPrevChoice;
                @PrevChoice.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPrevChoice;
                @PrevChoice.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPrevChoice;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MenuOpenClose.started += instance.OnMenuOpenClose;
                @MenuOpenClose.performed += instance.OnMenuOpenClose;
                @MenuOpenClose.canceled += instance.OnMenuOpenClose;
                @NextChoice.started += instance.OnNextChoice;
                @NextChoice.performed += instance.OnNextChoice;
                @NextChoice.canceled += instance.OnNextChoice;
                @PrevChoice.started += instance.OnPrevChoice;
                @PrevChoice.performed += instance.OnPrevChoice;
                @PrevChoice.canceled += instance.OnPrevChoice;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // ChrSelScene
    private readonly InputActionMap m_ChrSelScene;
    private IChrSelSceneActions m_ChrSelSceneActionsCallbackInterface;
    private readonly InputAction m_ChrSelScene_Prev;
    private readonly InputAction m_ChrSelScene_Next;
    private readonly InputAction m_ChrSelScene_Back;
    private readonly InputAction m_ChrSelScene_Select;
    private readonly InputAction m_ChrSelScene_Start;
    public struct ChrSelSceneActions
    {
        private @PlayerControls m_Wrapper;
        public ChrSelSceneActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Prev => m_Wrapper.m_ChrSelScene_Prev;
        public InputAction @Next => m_Wrapper.m_ChrSelScene_Next;
        public InputAction @Back => m_Wrapper.m_ChrSelScene_Back;
        public InputAction @Select => m_Wrapper.m_ChrSelScene_Select;
        public InputAction @Start => m_Wrapper.m_ChrSelScene_Start;
        public InputActionMap Get() { return m_Wrapper.m_ChrSelScene; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ChrSelSceneActions set) { return set.Get(); }
        public void SetCallbacks(IChrSelSceneActions instance)
        {
            if (m_Wrapper.m_ChrSelSceneActionsCallbackInterface != null)
            {
                @Prev.started -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnPrev;
                @Prev.performed -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnPrev;
                @Prev.canceled -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnPrev;
                @Next.started -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnNext;
                @Next.performed -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnNext;
                @Next.canceled -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnNext;
                @Back.started -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnBack;
                @Select.started -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnSelect;
                @Start.started -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_ChrSelSceneActionsCallbackInterface.OnStart;
            }
            m_Wrapper.m_ChrSelSceneActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Prev.started += instance.OnPrev;
                @Prev.performed += instance.OnPrev;
                @Prev.canceled += instance.OnPrev;
                @Next.started += instance.OnNext;
                @Next.performed += instance.OnNext;
                @Next.canceled += instance.OnNext;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
            }
        }
    }
    public ChrSelSceneActions @ChrSelScene => new ChrSelSceneActions(this);

    // MainMenuScene
    private readonly InputActionMap m_MainMenuScene;
    private IMainMenuSceneActions m_MainMenuSceneActionsCallbackInterface;
    private readonly InputAction m_MainMenuScene_Prev;
    private readonly InputAction m_MainMenuScene_Next;
    private readonly InputAction m_MainMenuScene_Up;
    private readonly InputAction m_MainMenuScene_Down;
    private readonly InputAction m_MainMenuScene_Left;
    private readonly InputAction m_MainMenuScene_Right;
    private readonly InputAction m_MainMenuScene_Back;
    private readonly InputAction m_MainMenuScene_Select;
    public struct MainMenuSceneActions
    {
        private @PlayerControls m_Wrapper;
        public MainMenuSceneActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Prev => m_Wrapper.m_MainMenuScene_Prev;
        public InputAction @Next => m_Wrapper.m_MainMenuScene_Next;
        public InputAction @Up => m_Wrapper.m_MainMenuScene_Up;
        public InputAction @Down => m_Wrapper.m_MainMenuScene_Down;
        public InputAction @Left => m_Wrapper.m_MainMenuScene_Left;
        public InputAction @Right => m_Wrapper.m_MainMenuScene_Right;
        public InputAction @Back => m_Wrapper.m_MainMenuScene_Back;
        public InputAction @Select => m_Wrapper.m_MainMenuScene_Select;
        public InputActionMap Get() { return m_Wrapper.m_MainMenuScene; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuSceneActions set) { return set.Get(); }
        public void SetCallbacks(IMainMenuSceneActions instance)
        {
            if (m_Wrapper.m_MainMenuSceneActionsCallbackInterface != null)
            {
                @Prev.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnPrev;
                @Prev.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnPrev;
                @Prev.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnPrev;
                @Next.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnNext;
                @Next.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnNext;
                @Next.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnNext;
                @Up.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnDown;
                @Left.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnRight;
                @Back.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnBack;
                @Select.started -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_MainMenuSceneActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_MainMenuSceneActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Prev.started += instance.OnPrev;
                @Prev.performed += instance.OnPrev;
                @Prev.canceled += instance.OnPrev;
                @Next.started += instance.OnNext;
                @Next.performed += instance.OnNext;
                @Next.canceled += instance.OnNext;
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public MainMenuSceneActions @MainMenuScene => new MainMenuSceneActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface IPlayerActionActions
    {
        void OnSprint(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrounch(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnChangeCamera(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnSpecialSkill(InputAction.CallbackContext context);
        void OnBattleSkill(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnMenuOpenClose(InputAction.CallbackContext context);
        void OnNextChoice(InputAction.CallbackContext context);
        void OnPrevChoice(InputAction.CallbackContext context);
    }
    public interface IChrSelSceneActions
    {
        void OnPrev(InputAction.CallbackContext context);
        void OnNext(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
    }
    public interface IMainMenuSceneActions
    {
        void OnPrev(InputAction.CallbackContext context);
        void OnNext(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
